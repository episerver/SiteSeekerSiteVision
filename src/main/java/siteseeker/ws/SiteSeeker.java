
/*
 * 
 */

package siteseeker.ws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.1.3
 * Thu Nov 27 23:14:41 CET 2008
 * Generated source version: 2.1.3
 * 
 */


@WebServiceClient(name = "SiteSeeker", 
                  wsdlLocation = "file:src/main/java/siteseeker/ws/SiteSeeker.wsdl",
                  targetNamespace = "urn:siteseeker") 
public class SiteSeeker extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("urn:siteseeker", "SiteSeeker");
    public final static QName SiteSeeker = new QName("urn:siteseeker", "SiteSeeker");
    static {
        URL url = null;
        try {
            url = new URL("file:src/main/java/siteseeker/ws/SiteSeeker.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from SiteSeeker.wsdl " + e);
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public SiteSeeker(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SiteSeeker(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SiteSeeker() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns SiteSeekerPortType
     */
    @WebEndpoint(name = "SiteSeeker")
    public SiteSeekerPortType getSiteSeeker() {
        return super.getPort(SiteSeeker, SiteSeekerPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SiteSeekerPortType
     */
    @WebEndpoint(name = "SiteSeeker")
    public SiteSeekerPortType getSiteSeeker(WebServiceFeature... features) {
        return super.getPort(SiteSeeker, SiteSeekerPortType.class, features);
    }

}

package siteseeker.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.1.3
 * Thu Nov 27 23:14:41 CET 2008
 * Generated source version: 2.1.3
 * 
 */
 
@WebService(targetNamespace = "urn:siteseeker", name = "SiteSeekerPortType")
@XmlSeeAlso({ObjectFactory.class})
public interface SiteSeekerPortType {

    @WebResult(name = "StatsAccessResponse", targetNamespace = "urn:siteseeker")
    @RequestWrapper(localName = "getStatsAccess", targetNamespace = "urn:siteseeker", className = "siteseeker.ws.GetStatsAccess")
    @ResponseWrapper(localName = "getStatsAccessResponse", targetNamespace = "urn:siteseeker", className = "siteseeker.ws.GetStatsAccessResponse")
    @WebMethod
    public siteseeker.ws.StatsAccessResponse getStatsAccess(
        @WebParam(name = "request", targetNamespace = "urn:siteseeker")
        siteseeker.ws.GetStatsAccessRequest request
    );

    @WebResult(name = "ParamResponse", targetNamespace = "urn:siteseeker")
    @RequestWrapper(localName = "getParam", targetNamespace = "urn:siteseeker", className = "siteseeker.ws.GetParam")
    @ResponseWrapper(localName = "getParamResponse", targetNamespace = "urn:siteseeker", className = "siteseeker.ws.GetParamResponse")
    @WebMethod
    public siteseeker.ws.ParamResponse getParam(
        @WebParam(name = "request", targetNamespace = "urn:siteseeker")
        siteseeker.ws.GetParamRequest request
    );

    @WebResult(name = "r", targetNamespace = "urn:siteseeker")
    @RequestWrapper(localName = "Ping", targetNamespace = "urn:siteseeker", className = "siteseeker.ws.Ping")
    @ResponseWrapper(localName = "PingResponse", targetNamespace = "urn:siteseeker", className = "siteseeker.ws.PingResponse")
    @WebMethod(operationName = "Ping")
    public java.lang.Boolean ping();

    @WebResult(name = "ClickResponse", targetNamespace = "urn:siteseeker")
    @RequestWrapper(localName = "doClick", targetNamespace = "urn:siteseeker", className = "siteseeker.ws.DoClick")
    @ResponseWrapper(localName = "doClickResponse", targetNamespace = "urn:siteseeker", className = "siteseeker.ws.DoClickResponse")
    @WebMethod
    public siteseeker.ws.ClickResponse doClick(
        @WebParam(name = "request", targetNamespace = "urn:siteseeker")
        siteseeker.ws.DoClickRequest request
    );

    @WebResult(name = "SearchResponse", targetNamespace = "urn:siteseeker")
    @RequestWrapper(localName = "doShortSearch", targetNamespace = "urn:siteseeker", className = "siteseeker.ws.DoShortSearch")
    @ResponseWrapper(localName = "doShortSearchResponse", targetNamespace = "urn:siteseeker", className = "siteseeker.ws.DoShortSearchResponse")
    @WebMethod
    public siteseeker.ws.ShortSearchResponse doShortSearch(
        @WebParam(name = "request", targetNamespace = "urn:siteseeker")
        siteseeker.ws.DoSearchRequest request
    );

    @WebResult(name = "CachedPageResponse", targetNamespace = "urn:siteseeker")
    @RequestWrapper(localName = "getCachedPage", targetNamespace = "urn:siteseeker", className = "siteseeker.ws.GetCachedPage")
    @ResponseWrapper(localName = "getCachedPageResponse", targetNamespace = "urn:siteseeker", className = "siteseeker.ws.GetCachedPageResponse")
    @WebMethod
    public siteseeker.ws.CachedPageResponse getCachedPage(
        @WebParam(name = "request", targetNamespace = "urn:siteseeker")
        siteseeker.ws.GetCachedPageRequest request
    );

    @WebResult(name = "SearchResponse", targetNamespace = "urn:siteseeker")
    @RequestWrapper(localName = "doSearch", targetNamespace = "urn:siteseeker", className = "siteseeker.ws.DoSearch")
    @ResponseWrapper(localName = "doSearchResponse", targetNamespace = "urn:siteseeker", className = "siteseeker.ws.DoSearchResponse")
    @WebMethod
    public siteseeker.ws.SearchResponse doSearch(
        @WebParam(name = "request", targetNamespace = "urn:siteseeker")
        siteseeker.ws.DoSearchRequest request
    );
}
